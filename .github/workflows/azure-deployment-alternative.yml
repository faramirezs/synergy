name: 🔧 Azure Debug Deployment - Emergency Use Only

# 🚨 EMERGENCY DEBUGGING WORKFLOW
# Use this ONLY when main deployment pipeline fails
# This workflow bypasses complex packaging for rapid debugging
# Manual trigger only - NOT for production use

on:
  workflow_dispatch:
    inputs:
      deployment_reason:
        description: 'Why are you using the debug deployment? (main pipeline should be preferred)'
        required: true
        type: choice
        options:
        - 'Main pipeline failing - emergency deployment needed'
        - 'Testing minimal deployment approach'
        - 'Debugging deployment package issues'
        - 'Investigating Azure deployment problems'
      skip_tests:
        description: 'Skip tests for faster deployment?'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: '18.x'
  AZURE_WEBAPP_NAME: synergy42

jobs:
  emergency-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ⚠️ Emergency Deployment Warning
        run: |
          echo "🚨 WARNING: Using emergency debugging deployment"
          echo "📋 Reason: ${{ github.event.inputs.deployment_reason }}"
          echo "🔄 This should be temporary - fix main pipeline ASAP"
          echo "📊 Main pipeline location: .github/workflows/main_synergy42.yml"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies (fast)
        run: |
          npm ci --production=false --ignore-scripts

      - name: Build application (minimal)
        run: |
          npm run build

      - name: Run tests (optional)
        if: ${{ github.event.inputs.skip_tests != 'true' }}
        run: |
          npm run test:prod || echo "Tests failed but continuing with deployment"
        continue-on-error: true

      - name: Create minimal deployment package
        run: |
          echo "🔧 Creating minimal deployment package for debugging..."
          mkdir debug-deploy

          # Essential files only
          cp package.json debug-deploy/
          cp package-lock.json debug-deploy/
          cp web.config debug-deploy/
          cp gulpfile.js debug-deploy/
          cp webpack.config.js debug-deploy/

          # Built application
          cp -r bin/ debug-deploy/bin/
          cp -r src/ debug-deploy/src/
          cp -r client/ debug-deploy/client/
          [ -d "config" ] && cp -r config/ debug-deploy/config/

          # Install minimal production dependencies
          cd debug-deploy
          npm ci --production --ignore-scripts --silent

          # Debug info
          echo "📦 Debug package contents:"
          ls -la
          echo "📊 Package size: $(du -sh . | cut -f1)"

      - name: 🚀 Emergency Deploy to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_SYNERGY42 }}
          package: debug-deploy

      - name: 🧪 Post-deployment verification
        run: |
          echo "⏳ Waiting for app to start..."
          sleep 45
          echo "🔍 Testing deployment..."
          curl -I "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/" || echo "❌ Initial request failed"

      - name: 📋 Deployment Summary
        run: |
          echo "✅ Emergency deployment completed"
          echo "🔗 App URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/"
          echo "⚠️  Remember: Fix main pipeline and stop using this emergency workflow"
          echo "📝 Main pipeline: .github/workflows/main_synergy42.yml"
