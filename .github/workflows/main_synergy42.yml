name: Build and deploy Node.js app to Azure Web App - synergy42

on:
  push:
    branches:
      - main
      - master  # Support both main and master branches
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          npm ci --production=false

      - name: Run build
        run: |
          npm run build

      - name: Run tests (optional)
        run: |
          npm run test:prod
        continue-on-error: true

      - name: Prepare deployment artifacts
        run: |
          # Create deployment directory
          mkdir deploy-package

          # Copy essential files and directories
          cp -r bin/ deploy-package/ || echo "No bin directory"
          cp -r src/ deploy-package/ || echo "No src directory"
          cp -r client/ deploy-package/ || echo "No client directory"
          cp -r config/ deploy-package/ || echo "No config directory"
          cp package*.json deploy-package/
          cp web.config deploy-package/ || echo "No web.config"
          cp startup.sh deploy-package/ || echo "No startup.sh"

          # Copy any built assets
          [ -d "dist" ] && cp -r dist/ deploy-package/ || echo "No dist directory"
          [ -d "build" ] && cp -r build/ deploy-package/ || echo "No build directory"

          # Create a minimal package.json for production
          cd deploy-package
          npm ci --production --ignore-scripts

          # Remove unnecessary files
          find . -name "*.log" -delete
          find . -name ".DS_Store" -delete
          find . -path "*/test/*" -delete
          find . -path "*/.git/*" -delete

      - name: Create deployment package
        run: |
          cd deploy-package
          zip -r ../deployment-package.zip . -x "*.log" "*/.git/*" "*/test/*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app-${{ github.sha }}
          path: deployment-package.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app-${{ github.sha }}

      - name: Extract deployment package
        run: |
          unzip deployment-package.zip -d deploy-app
          ls -la deploy-app/

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'synergy42'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_SYNERGY42 }}
          package: deploy-app

      - name: Verify deployment
        run: |
          echo "Deployment completed. App URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          # Wait a moment for the app to start
          sleep 30
          # Try to ping the health endpoint if it exists
          curl -f "${{ steps.deploy-to-webapp.outputs.webapp-url }}/health" || echo "Health check failed, app may still be starting"
